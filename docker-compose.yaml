version: "3.1"

networks:
  tiseu:
    name: tiseu

x-auth-base-service: &auth-base-service
  build:
    context: ./auth-server/
    dockerfile: Dockerfile.prod
  working_dir: /usr/src/app
  environment:
    - NODE_ENV=docker-development
    - DB_NAME=auth-server
    - DB_URI=mongodb://auth-mongo:27017
    - JWT_SECRET=secret
    - JWT_DURATION=120m

x-auth-direct-run-service: &auth-direct-run-service
  <<: *auth-base-service
  profiles: [ "direct-run" ]
  build:
    context: ./auth-server/
    dockerfile: Dockerfile.dev

services:
  # --- AUTH SERVER ---
  auth-app:
    <<: *auth-base-service
    command: node dist/main.js
    container_name: auth-app
    networks:
      tiseu:
        aliases:
          - auth-app
    depends_on:
      auth-mongo:
        condition: service_healthy
    ports:
      - "4101:3101"

  auth-mongo:
    image: mongo
    container_name: auth-mongo
    ports:
      - "4117:27017"
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongo localhost:27017/db --quiet
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
    volumes:
      - auth-mongodb:/data/db
    networks:
      tiseu:
        aliases:
          - auth-mongo

  auth-seed-admin:
    <<: *auth-direct-run-service
    entrypoint: npx nestjs-command seed:admin
    networks:
      tiseu:
        aliases:
          - auth-command-seed-admin
  auth-seed-user:
    <<: *auth-direct-run-service
    entrypoint: npx nestjs-command seed:user
    networks:
      tiseu:
        aliases:
          - auth-command-seed-user

  # --- MATICAR ---
  maticar-frontend:
    environment:
      - VITE_PORT=4001
      - VITE_APP_URL=http://localhost:4001
      - VITE_AUTH_SERVER_URL=http://localhost:4101
      - VITE_BACKEND_URL=http://localhost:4002/api
    build:
      context: ./4. maticar/frontend/
    container_name: maticar-frontend
    networks:
      tiseu:
        aliases:
          - frontend
    ports:
      - "4001:4001"

  maticar:
    build:
      context: ./4. maticar/maticar-backend/
      args:
        - APP_VERSION
    container_name: maticar
    environment:
      - DEVELOP=true
      - APP_VERSION=1
      - LOG_LEVEL=DEBUG
      - MYSQL_USER=root
      - AUTH_SERVER_API=http://auth-app-proxy:4101
      - MYSQL_PASSWORD=maticar123
      - MYSQL_DB=maticar
      - MYSQL_HOST=mysqlDB
      - MYSQL_PORT=4003
    networks:
      tiseu:
        aliases:
          - maticar-app
    ports:
      - "4002:4002"
    depends_on:
      maticar-mysql:
        condition: service_healthy

  maticar-mysql:
    image: mysql:8.0.23
    container_name: maticar-mysql
    ports:
      - "4003:4003"
    environment:
      - MYSQL_TCP_PORT=4003
      - MYSQL_ROOT_PASSWORD=maticar123
      - MYSQL_DATABASE=maticar
    volumes:
      - maticar-mysql:/var/lib/mysql
      - ./4. maticar/init_db:/docker-entrypoint-initdb.d
    networks:
      tiseu:
        aliases:
          - "mysqlDB"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s
  # --- ePortal ---
  eportal:
    environment:
      - VITE_PORT=4011
      - VITE_APP_URL=http://localhost:4011
      - VITE_AUTH_SERVER_URL=http://localhost:4101
    build:
      context: ./eportal/
    container_name: eportal 
    networks:
      tiseu:
        aliases:
          - eportal 
    ports:
      - "4011:4011"

  # ---eGlasanje---
  glasanje-frontend:
    build:
      context: ./10. biracki spisak i eGlasanje/glasanje-frontend
    container_name: glasanje-frontend
    volumes:
      - ./10. biracki spisak i eGlasanje/glasanje-frontend:/app
      - /app/node_modules
    ports:
      - "10001:10001"
    environment:
      - PORT=10001

  glasanje-backend:
    depends_on:
      - glasanje-mysql
    build:
      context: ./10. biracki spisak i eGlasanje/glasanje-backend/
    container_name: glasanje-backend
    ports:
      - "10002:10002"
    environment:
      - MYSQL_USER=root
      - AUTH_SERVER_API=http://auth-app-proxy:10101
      - MYSQL_PASSWORD=glasanje123
      - MYSQL_DB=glasanje
      - MYSQL_HOST=glasanjeDB
      - MYSQL_PORT=10003

  glasanje-mysql:
    image: mysql:8.0.23
    container_name: glasanje-mysql
    ports:
      - "10003:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=glasanje123
      - MYSQL_DATABASE=glasanje
      - MYSQL_ROOT_HOST=%
    volumes:
      - glasanje-mysql:/var/lib/mysql
      - ./10. biracki spisak i eGlasanje/database:/tmp/database
    command: mysqld --init-file="/tmp/database/init_db.sql"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 20s

volumes:
  auth-mongodb:
    driver: local
  maticar-mysql:
    driver: local
  glasanje-mysql:
    driver: local